给你一个整数数组 nums 。

如果一组数字 (i,j) 满足 nums[i] == nums[j] 且 i < j ，就可以认为这是一组 好数对 。

返回好数对的数目。

 

示例 1：

输入：nums = [1,2,3,1,1,3]
输出：4
解释：有 4 组好数对，分别是 (0,3), (0,4), (3,4), (2,5) ，下标从 0 开始
示例 2：

输入：nums = [1,1,1,1]
输出：6
解释：数组中的每组数字都是好数对
示例 3：

输入：nums = [1,2,3]
输出：0
 

提示：

1 <= nums.length <= 100
1 <= nums[i] <= 100

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/number-of-good-pairs
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。


我的答案（暴力法）：

class Solution {
public int numIdenticalPairs(int[] nums) {
  int count = 0;
  for(int i=0;i<nums.length;i++){
    for(int j=i+1;j<nums.length;j++){
      if(nums[i]==nums[j])
        count++;
    }
  }
  return count;
  }
}

作者：melon-n
链接：https://leetcode-cn.com/problems/number-of-good-pairs/solution/jian-dan-cu-bao-by-melon-n/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



大佬的答案（公式法）：
class Solution {
    public int numIdenticalPairs(int[] nums) {
        Map<Integer,Integer> map = new HashMap<>();
        if(nums.length == 0)
            return 0;
        int count = 0;
        for(int i : nums){
            map.put(i, map.getOrDefault(i, 0) + 1);
        }
        for(int j : map.values()){
            if(j > 1){
                count += (j - 1) * j / 2;             //2个一样的是1,3个一样的是3,4个一样的是6
            }
        }
        return count;
    }
}

作者：kingsleyy
链接：https://leetcode-cn.com/problems/number-of-good-pairs/solution/yong-gong-shi-jie-jue-by-kingsleyy/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
